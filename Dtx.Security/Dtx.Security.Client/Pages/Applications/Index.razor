@page "/applications/index"
@inject Services.ApplicationService applicationService

<h3>
	List
</h3>

<div>
	<a href="/application/create" class="btn btn-primary">Create</a>
</div>

@if (List == null)
{
	<div>Loading...</div>
}
else
{
	<div class="row">
		<div class="col-12 table-responsive">
			<table class="table table-bordered table-striped table-hover table-sm">

				<caption>List of Applications</caption>

				<thead class="thead-light">
					<tr>
						<th scope="col">
							#
						</th>
						<th scope="col">
							@(Resources.DataDictionary.Name)
						</th>
						<th scope="col">
							@(Resources.DataDictionary.Title)
						</th>
						<th scope="col">
							@(Resources.DataDictionary.IsActive)
						</th>
						<th scope="col">
							@(Resources.DataDictionary.IsVerified)
						</th>
						<th scope="col">
							@(Resources.DataDictionary.IsIPRestricted)
						</th>
						<th scope="col">
							@(Resources.DataDictionary.IsUrlRestricted)
						</th>
					</tr>
				</thead>

				<tbody>
					@for (int index = 0; index <= List.Count - 1; index++)
					{
						var entity = List[index];

						<tr>
							<th scope="row">
								@(index + 1)
							</th>
							<td>
								@(entity.Name)
							</td>
							<td>
								@(entity.Title)
							</td>
							<td>
								<DtxDisabledCheckBox Value="entity.IsActive" />
							</td>
							<td>
								<DtxDisabledCheckBox Value="entity.IsVerified" />
							</td>
							<td>
								<DtxDisabledCheckBox Value="entity.IsIPRestricted" />
							</td>
							<td>
								<DtxDisabledCheckBox Value="entity.IsUrlRestricted" />
							</td>
						</tr>
					}
				</tbody>

			</table>
		</div>
	</div>
}

@code
{

	protected override
		async
		Task
		OnInitializedAsync()
	{
		List =
			await
			applicationService.GetAsync();
	}

	public System.Collections.Generic.IList<Models.Application> List { get; set; }

}
