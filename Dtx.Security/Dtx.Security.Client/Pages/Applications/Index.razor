@page "/applications/index"
@inject HttpClient Http

<h3>Index</h3>

@if (Collection == null)
{
	<div>Loading...</div>
}
else
{
	<div>
		<table>
			<thead>
				<tr>
					<th>
						#
					</th>
					<th>
						@(Resources.DataDictionary.Name)
					</th>
					<th>
						@(Resources.DataDictionary.IsActive)
					</th>
				</tr>
			</thead>
			<tbody>
				@for (int index = 0; index < Collection.Count; index++)
				{
					var entity = Collection[index];

					<tr>
						<td>
							@(index + 1)
						</td>
						<td>
							@(entity.Name)
						</td>
						<td>
							<DtxDisabledCheckBox Value="entity.IsActive" />
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

@*@code {

		protected override void OnInitialized()
		{
			base.OnInitialized();

			Collection =
				new List<Models.Application>();

			for (int index = 1; index <= 10; index++)
			{
				var entity =
					new Models.Application
					{
						Name = $"Name { index }",
						IsActive = index % 2 == 0,
					};

				Collection.Add(entity);
			}
		}

		public System.Collections.Generic.List<Models.Application> Collection { get; set; }

	}*@

@code
{

	protected override async Task OnInitializedAsync()
	{
		Collection =
			await Http.GetFromJsonAsync<System.Collections.Generic.IList<Models.Application>>
			(requestUri: "http://localhost:5086/Applications");
	}

	public System.Collections.Generic.IList<Models.Application> Collection { get; set; }

}
